meta-intel-axxia-rdk
====================

This layer adds build instructions to the meta-intel-axxia layer to create an
'in-distribution' image.

When applied, meta-intel-axxia-rdk provides support for creating a distribution that
adds out-of-tree RDK kernel level modules to the resulting image. The RDK kernel
modules also get loaded on boot-up.

Use of this layer assumes that you are being supplied with the relevant kernel
module source code release archives directly from Intel.

Dependencies
============

This layer depends on:

Meta Intel Axxia Layer (and its dependencies)
---------------------------------------------
URI: https://github.com/axxia/meta-intel-axxia.git
branch: rocko
revision: snr_delivery13_linux4_12

This layer recommend (for RDK userspace and dpdk support):

Meta DPDK Layer (Yocto)
-----------------------
URI: https://git.yoctoproject.org/cgit/cgit.cgi/meta-dpdk
branch: master
revision: 9d2d7a606278131479cc5b6c8cad65ddea3ff9f6

Updates to meta-intel-axxia README
==================================

This section contains updates and additions to the meta-intel-axxia README, needed 
to apply this layer.

## Sources

### In-Distribution builds
For in-distribution builds, the Intel github.com repositories provide two layer
variants : meta-intel-axxia-rdk and meta-intel-axxia-rdk_private.  Unless
instructed otherwise, the publicly-available meta-intel-axxia-rdk should be
used to provide in-distribution support. 

```
git clone https://github.com/axxia/meta-intel-axxia-rdk.git
```

The private repository is used for development and is not supported.
To access the private repository, request permission from Intel. 

```
git clone https://github.com/axxia/meta-intel-axxia-rdk_private.git meta-intel-axxia-rdk
```

In all cases, use the 'rocko' branch or the tag specified in the release notes.


## Building the meta-intel-axxia BSP layer

1: Clone the Axxia RDK meta layer. This provides meta data for building
in-distribution images for the Axxia specific board types.  See 'Sources' above to
select the right meta-intel-axxia repository, branch, and version.

```
   $ cd $YOCTO
   $ <the git clone command chosen above>
   $ cd meta-intel-axxia-rdk
   $ git checkout rocko (or git checkout tags/<tag from the release notes>)
   $ mkdir downloads
   $ cd downloads
   $ cp /your/path/to/rdk_klm_src_<releaseinfo>.txz .
   $ ln -s rdk_klm_src_<releaseinfo>.txz rdk_klm_src.tar.xz
   $ cp /your/path/to/rdk_user_src_<releaseinfo>.txz .
   $ ln -s rdk_user_src_<releaseinfo>.txz rdk_user_src.tar.xz
   $ cp /your/path/to/dpdk_diff_<releaseinfo>.patch .
   $ ln -s dpdk_diff_<releaseinfo>.patch dpdk_diff.patch
```

2: Clone the DPDK meta layer. It provides dpdk recipes from upstream. It has only
master branch so no checkout required.

```
   $ cd $YOCTO
   $ git clone https://git.yoctoproject.org/cgit/cgit.cgi/meta-dpdk
```

3: Edit the conf/bblayers.conf file

```
   $ pwd (you should be at $YOCTO/axxia)
   $ vi conf/bblayers.conf
```

4: Edit BBLAYERS variable as follows. Replace references to $YOCTO below with the
actual value you provided in step 1.

```
   BBLAYERS ?= " \
            $YOCTO/poky/meta \
            $YOCTO/poky/meta-poky \
            $YOCTO/meta-openembedded/meta-oe \
            $YOCTO/meta-openembedded/meta-networking \
            $YOCTO/meta-openembedded/meta-filesystems \
            $YOCTO/meta-openembedded/meta-python \
            $YOCTO/meta-virtualization \
            $YOCTO/meta-intel \
            $YOCTO/meta-intel-axxia \
            $YOCTO/meta-intel-axxia/meta-intel-snr \
            $YOCTO/meta-dpdk \
            $YOCTO/meta-intel-axxia-rdk \
            "
```

Note: meta-dpdk layer is requested if RDK userpsace and/or dpdk support
      will be enabled (see 5.2 and 5.3)

5: Edit the conf/local.conf file:

```
   $ vi conf/local.conf
```

5.1: Set distribution configuration to have all Axxia specific features.

To build an in-distribution image:

    DISTRO = "intel-axxia-indist"

5.2: Enable RDK-userspace support

    DISTRO_FEATURES_append = " userspace"

5.3: Enable DPDK support (include userspace support)

    DISTRO_FEATURES_append = " dpdk"

5.4: Set the release info for RDK userspace from rdk_user_src* archive

    RDK_USER_VERSION = "<releaseinfo>"
